buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-clover-plugin:2.1.3'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

apply plugin: 'com.bmuschko.clover'

clover {
    report {
        html = true
        pdf = true
    }
}

subprojects {

    repositories {
        mavenCentral()
    }

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: 'com.bmuschko.clover'
    apply plugin: 'com.google.protobuf'
    apply plugin: "com.github.johnrengelman.shadow"

    dependencies {
        clover 'org.openclover:clover:4.2.0'
        compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.0.0'
        compile group: 'io.netty', name: 'netty-all', version: '4.1.16.Final'
        compile group: 'org.fusesource.jansi', name: 'jansi', version: '1.8'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    clover {
        report {
            html = true
            pdf = true

            // Support capturing test results from JUnix XML report
            testResultsDir = project.tasks.getByName('test').reports.junitXml.destination
            testResultsInclude = 'TEST-*.xml'

            // Clover report nested columns support
            columns {
                coveredMethods format: 'longbar', min: '75'
                coveredStatements format: '%'
                coveredBranches format: 'raw'
                totalPercentageCovered format: '%', scope: 'package'
            }

            // Clover history generation support
            // See Clover documentation for details of the values supported
            historical {
                enabled = true
                historyIncludes = 'clover-*.xml.gz'
                packageFilter = null
                from = null
                to = null

                added {
                    range = 10
                    interval = '3 weeks'
                }
                mover {
                    threshold = 1
                    range = 10
                    interval = '3 weeks'
                }
                mover {
                    threshold = 1
                    range = 10
                    interval = '3 months'
                }
                mover {
                    threshold = 1
                    range = 10
                    interval = '1 year'
                }
            }
        }
    }

    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.0.0'
        }
        generatedFilesBaseDir = "$projectDir/ProtobufGenerated"
    }

    clean {
        delete protobuf.generatedFilesBaseDir
    }

    idea {
        module {
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
        }
    }

}


task test(overwrite:true) {
    dependsOn ':jcoinche-client:test'
    dependsOn ':jcoinche-server:test'
    finalizedBy 'cover'
}

task cover(dependsOn: ['cloverAggregateReports'])

tasks.create("package") {
    tasks.getByName("package").dependsOn test
}